name: CI

on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    if: ${{ !contains(github.event.head_commit.message, "[skip ci]") }}
    
    env:
      SCPSL_SERVER: ${{ github.workspace }}/scpsl

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Download steamcmd
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip
    
    - name: Extract steamcmd
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: steamcmd.zip
        pathTarget: scripts
    
    - name: Cache SCP:SL
      uses: actions/cache@v2
      with:
        path: ${{ env.SCPSL_SERVER }}
        key: scpsl
    
    - name: Run SCP:SL download script
      run:  cd .\scripts\; .\scpsl.bat
      continue-on-error: true

    - name: Download AssemblyPublicizer
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: https://github.com/CabbageCrow/AssemblyPublicizer/releases/download/v1.1.0/AssemblyPublicizer.zip
        location: ${{ env.SCPSL_SERVER }}\SCPSL_Data\Managed

    - name: Extract AssemblyPublicizer
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: ${{ env.SCPSL_SERVER }}\SCPSL_Data\Managed\AssemblyPublicizer.zip
        pathTarget: ${{ env.SCPSL_SERVER }}\SCPSL_Data\Managed

    - name: Publicize
      run:  |
        cd ${{ env.SCPSL_SERVER }}\SCPSL_Data\Managed
        AssemblyPublicizer\AssemblyPublicizer.exe Assembly-CSharp.dll
        AssemblyPublicizer\AssemblyPublicizer.exe Mirror.dll
        
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
      
    - name: Restore NuGet
      run: nuget restore

    - name: Run build script
      run:  cd .\scripts\; .\build.bat

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        path: out/
