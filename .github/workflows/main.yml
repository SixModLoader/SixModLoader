name: CI

on:
  push:
  pull_request:
  release:
    types:
      - published

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    timeout-minutes: 10
    if: "!contains(github.event.head_commit.message, '[skip ci]') && (!startsWith(github.ref, 'refs/tags/') || github.event_name == 'release')"

    env:
      SCPSL_SERVER: ${{ github.workspace }}/scpsl

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - run: rm NuGet.config

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.5.0
        with:
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Restore NuGet
        run: dotnet restore

      - name: Run build script
        shell: powershell
        run: cd .\scripts\; .\build.ps1

      - name: Download docfx
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://github.com/dotnet/docfx/releases/download/v2.56/docfx.zip

      - name: Extract docfx
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: docfx.zip
          pathTarget: docs

      - name: Build Documentation
        run: cd .\docs\; .\build.bat

      - name: Publish Documentation on GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          personal_token: ${{ secrets.GH_PAT }}
          publish_dir: ./docs/_site
          external_repository: SixModLoader/sixmodloader.github.io
          publish_branch: master

      - name: Upload main artifact
        uses: actions/upload-artifact@v2
        with:
          name: SixModLoader
          path: out/

      - if: ${{ github.event_name == 'release' }}
        run: 7z a SixModLoader.zip ./out/*

      - name: Upload Release Asset
        if: ${{ github.event_name == 'release' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./SixModLoader.zip
          asset_name: SixModLoader.zip
          asset_content_type: application/zip

      - name: Push NuGet package
        if: ${{ github.event_name == 'release' }}
        run: |
          cd out
          dotnet tool install --global gpr
          dotnet pack ../SixModLoader -c Release -o .
          dotnet pack ../SixModLoader.Api -c Release -o .
          gpr push *.nupkg